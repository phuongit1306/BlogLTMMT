<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Networking on Blog Lập Trình - 2180607911 - Nguyễn Thanh Phương - 21DTHD3</title>
    <link>https://yourusername.github.io/tags/networking/</link>
    <description>Recent content in Networking on Blog Lập Trình - 2180607911 - Nguyễn Thanh Phương - 21DTHD3</description>
    <generator>Hugo -- 0.151.2</generator>
    <language>vi</language>
    <lastBuildDate>Wed, 15 Oct 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://yourusername.github.io/tags/networking/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Bài 9 - Lập trình mạng trong Java với RMI (Remote Method Invocation)</title>
      <link>https://yourusername.github.io/blog/bai9-lap-trinh-mang-voi-rmi-trong-java/</link>
      <pubDate>Wed, 15 Oct 2025 00:00:00 +0000</pubDate>
      <guid>https://yourusername.github.io/blog/bai9-lap-trinh-mang-voi-rmi-trong-java/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;Khi lập trình mạng, ngoài việc truyền dữ liệu giữa Client và Server, đôi khi bạn muốn &lt;strong&gt;gọi trực tiếp một hàm&lt;/strong&gt; trên máy khác như thể nó nằm trong cùng chương trình.&lt;br&gt;
👉 Đó chính là lúc &lt;strong&gt;RMI (Remote Method Invocation)&lt;/strong&gt; phát huy sức mạnh!&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-1-giới-thiệu-về-rmi&#34;&gt;🧠 1. Giới thiệu về RMI&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;RMI (Remote Method Invocation)&lt;/strong&gt; là cơ chế cho phép một chương trình Java &lt;strong&gt;gọi phương thức của đối tượng trên máy khác&lt;/strong&gt; qua mạng, giống như gọi hàm cục bộ.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Bài 8 - Gửi và nhận file qua mạng trong Java (File Transfer)</title>
      <link>https://yourusername.github.io/blog/bai8-gui-va-nhan-file-qua-mang-trong-java/</link>
      <pubDate>Tue, 14 Oct 2025 00:00:00 +0000</pubDate>
      <guid>https://yourusername.github.io/blog/bai8-gui-va-nhan-file-qua-mang-trong-java/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;Trong các bài trước, ta đã học cách gửi và nhận &lt;strong&gt;chuỗi văn bản&lt;/strong&gt; giữa Client và Server.&lt;/li&gt;
&lt;li&gt;Ở bài này, chúng ta sẽ tiến thêm một bước để &lt;strong&gt;truyền tải file (ảnh, PDF, nhạc, video, …)&lt;/strong&gt; giữa hai máy tính qua &lt;strong&gt;Socket TCP&lt;/strong&gt; 📁&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-1-nguyên-lý-hoạt-động&#34;&gt;🧠 1. Nguyên lý hoạt động&lt;/h2&gt;
&lt;h3 id=&#34;-luồng-dữ-liệu&#34;&gt;🔄 Luồng dữ liệu&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Client&lt;/strong&gt; mở một file cần gửi → đọc dữ liệu thành byte[]&lt;/li&gt;
&lt;li&gt;Gửi dữ liệu này qua &lt;strong&gt;Socket OutputStream&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Server&lt;/strong&gt; nhận dữ liệu qua &lt;strong&gt;InputStream&lt;/strong&gt; và ghi vào file đích&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;📸 &lt;em&gt;Sơ đồ hoạt động:&lt;/em&gt;
&lt;img alt=&#34;Java File Transfer Diagram&#34; loading=&#34;lazy&#34; src=&#34;../images/java-file-transfer-diagram.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Bài 7 - Lập trình mạng với UDP trong Java</title>
      <link>https://yourusername.github.io/blog/bai7-lap-trinh-mang-voi-udp-trong-java/</link>
      <pubDate>Sat, 11 Oct 2025 00:00:00 +0000</pubDate>
      <guid>https://yourusername.github.io/blog/bai7-lap-trinh-mang-voi-udp-trong-java/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;Trong các bài trước, chúng ta đã làm quen với &lt;strong&gt;Socket TCP&lt;/strong&gt;, giúp tạo kết nối ổn định giữa Client và Server.&lt;/li&gt;
&lt;li&gt;Tuy nhiên, trong nhiều ứng dụng như &lt;strong&gt;trò chơi trực tuyến, stream video/audio&lt;/strong&gt;, ta cần &lt;strong&gt;tốc độ cao hơn&lt;/strong&gt;, dù có thể &lt;strong&gt;mất một ít dữ liệu&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Đó chính là lúc giao thức &lt;strong&gt;UDP (User Datagram Protocol)&lt;/strong&gt; được sử dụng ⚡&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-1-tổng-quan-về-udp&#34;&gt;🧠 1. Tổng quan về UDP&lt;/h2&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Đặc điểm&lt;/th&gt;
          &lt;th&gt;Mô tả&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Không kết nối (Connectionless)&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Không cần thiết lập kết nối giữa client &amp;amp; server&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Nhanh hơn TCP&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Không có xác nhận gói tin nên tốc độ cao hơn&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Không đảm bảo dữ liệu đến&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Gói tin có thể bị mất, trễ hoặc đến sai thứ tự&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Ứng dụng phổ biến&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Video call, voice chat, game online, livestream&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;📸 &lt;em&gt;Minh họa hoạt động UDP:&lt;/em&gt;
&lt;img alt=&#34;Java UDP Diagram&#34; loading=&#34;lazy&#34; src=&#34;../images/java-udp-diagram.png&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Bài 6 - Xây dựng Chat Server nhiều người dùng (Multi-Client Chat)</title>
      <link>https://yourusername.github.io/blog/bai6-xay-dung-chat-server-nhieu-nguoi-dung/</link>
      <pubDate>Fri, 10 Oct 2025 00:00:00 +0000</pubDate>
      <guid>https://yourusername.github.io/blog/bai6-xay-dung-chat-server-nhieu-nguoi-dung/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;Sau khi đã tạo thành công &lt;strong&gt;chat hai chiều giữa 1 client và 1 server&lt;/strong&gt; ở bài trước, chúng ta sẽ tiếp tục phát triển thành &lt;strong&gt;chat nhiều người dùng cùng lúc&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Ứng dụng này giúp &lt;strong&gt;nhiều client có thể trò chuyện trong cùng một phòng chat&lt;/strong&gt; giống như Messenger group hoặc Discord 🔥&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-1-ý-tưởng-hệ-thống&#34;&gt;🧩 1. Ý tưởng hệ thống&lt;/h2&gt;
&lt;h3 id=&#34;-cấu-trúc-hoạt-động&#34;&gt;⚙️ Cấu trúc hoạt động&lt;/h3&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Thành phần&lt;/th&gt;
          &lt;th&gt;Mô tả&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Server&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Chờ nhiều client kết nối, mỗi client có một luồng riêng để giao tiếp&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Client&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Kết nối đến server, gửi và nhận tin nhắn&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;Broadcast&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;Server gửi tin nhắn từ 1 client đến tất cả client khác&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;📸 &lt;em&gt;Sơ đồ hoạt động:&lt;/em&gt;
&lt;img alt=&#34;Java Multi Chat Diagram&#34; loading=&#34;lazy&#34; src=&#34;../images/java-multi-chat-diagram.png&#34;&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
